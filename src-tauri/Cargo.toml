[package]
name = "app"
version = "0.9.6"
description = "Cross-platform (Linux, WIndows, MacOS) Desktop GUI system monitor"
authors = ["Pacholo Amit"]
license = "MIT"
repository = ""
default-run = "app"
edition = "2021"
rust-version = "1.78"

[workspace]

members = [
  "ws-systemicons"
]
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.5.2", features = [] }

[dependencies]
systemicons = { path = "./ws-systemicons" }
chrono = {version = "0.4.23", features= ["serde"] }
# rusqlite = { version = "0.28.0", features = ["bundled", "chrono"] }
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.6.7", features = ["api-all", "system-tray", "updater"] }
sysinfo = "0.30.12"
tauri-plugin-log = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
tauri-plugin-store = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
tauri-plugin-autostart = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
tauri-plugin-window-state = "0.1.0"
log = "^0.4"
tokio = { version = "1.37.0", features = ["macros", "rt-multi-thread"] }
ts-rs = "8.1"
hex_color = "3.0.0"
rayon = "1.10.0"
fs_extra = "1.3.0"
base64 = "0.22.1"


[target.'cfg(target_os = "macos")'.dependencies]
cocoa = "0.25.0"
objc = "0.2.7"

[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.52.0", features = [
  "Win32_Graphics_Dwm",
  "Win32_Foundation",
  "Win32_UI_Controls",
] }
winver = "1"
winapi-util = "0.1.8"
[target.'cfg(windows)'.dependencies.winapi]
version = "0.3.7"
features = ["winerror"]
# surrealdb = { version = "1.5.0" }



[features]
# by default Tauri runs in production mode
# when `tauri dev` runs it is executed with `cargo run --no-default-features` if `devPath` is an URL
default = [ "custom-protocol" ]
# this feature is used used for production builds where `devPath` points to the filesystem
# DO NOT remove this
custom-protocol = [ "tauri/custom-protocol" ]
